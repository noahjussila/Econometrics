{
  "hash": "2e34c72df4d865384b2f371bda8a3e0e",
  "result": {
    "markdown": "# Binary Choice \n\n\n\n\n::: {.cell hash='binary_cache/html/unnamed-chunk-1_57b653412bcebdd7b1f1357af6a253a5'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(pracma)\nlibrary(EnvStats)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'EnvStats'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    predict, predict.lm\n```\n:::\n\n```{.r .cell-code}\ntibble(\n  x = seq(-2, 2, length = 1000),\n  logit = plogis(x),\n  probit = pnorm(x),\n  `Xβ` = x\n) %>% \n  gather(\"F\", \"val\", -x) %>% \n  ggplot(aes(x, val, color = F)) +\n  geom_line() +\n  theme_minimal() +\n  labs(x = \"Xβ\", y = \"p = Prob(y = 1 | x)\") +\n  theme(legend.position = \"bottom\") +\n  ylim(-0.25,1.25) + \n  geom_hline(yintercept = c(0,1))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 626 row(s) containing missing values (geom_path).\n```\n:::\n\n::: {.cell-output-display}\n![](binary_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\ntibble(\n  x = seq(-5, 5, length = 1000),\n  logit = dlogis(x),\n  normal = dnorm(x)\n) %>% \n  gather(\"density\", \"val\", -x) %>% \n  ggplot(aes(x, val, color = density)) +\n  geom_line() \n```\n\n::: {.cell-output-display}\n![](binary_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n:::\n\n::: {.cell hash='binary_cache/html/unnamed-chunk-2_bc3780432e130b173ad5f14e79938397'}\n\n```{.r .cell-code}\nn <- 10000\nx <- runif(n, -5, 5)\np <- plogis(0.1 + 0.2*x)\nX <- cbind(1, x)\ny <- sapply(p, function(p) sample(0:1, 1, prob = c(1-p, p)) )\n\nbinary_choice_MLE <- function(y, X, Fun){\n  K <- ncol(X)\n  \n  # define negative log-likelihood\n  neg_LL <- function(beta) {\n    -sum(y*log(Fun(X %*% beta)) + (1-y)*log(1 - Fun(X %*% beta)))\n  }\n  \n  # minimize neg_LL\n  mle <- optim(\n    par = rep(0,K), \n    fn = neg_LL,\n    hessian = TRUE, \n    control = list(reltol = 1e-8)\n  )\n  \n  # access mle parameter and SEs from optimization\n  beta_hat <- mle$par\n  var_hat <- solve(mle$hessian)\n  se_hat <- sqrt(diag(var_hat))\n  \n  #calculate z score, CI, and p-val\n  z <- beta_hat/se_hat\n  lower_CI <- beta_hat - pnorm(0.975)*se_hat\n  upper_CI <- beta_hat + pnorm(0.975)*se_hat\n  p_val <- 2*(1 - pnorm(z))\n  \n  #combine everything into one table to return\n  output <- cbind(beta_hat, se_hat, z, lower_CI, upper_CI, p_val)\n  rownames(output) <- paste(\"β\", 1:K, sep = \"\")\n  colnames(output) <- c(\"Estimate\", \"Std.Error\", \"z-Stat\", \"Lower 95% CI\", \"Upper 95% CI\", \"p-Value\")\n  return(output)\n}\n\n\nbinary_choice_MLE(y, X, plogis) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Estimate  Std.Error    z-Stat Lower 95% CI Upper 95% CI      p-Value\nβ1 0.1009003 0.02085986  4.837055   0.08347772    0.1183229 1.317768e-06\nβ2 0.2032028 0.00745391 27.261235   0.19697713    0.2094284 0.000000e+00\n```\n:::\n\n```{.r .cell-code}\nglm(y ~ x, family = \"binomial\") %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = y ~ x, family = \"binomial\")\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.6731  -1.0990   0.7762   1.0598   1.5818  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) 0.101016   0.020859   4.843 1.28e-06 ***\nx           0.203135   0.007454  27.253  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 13841  on 9999  degrees of freedom\nResidual deviance: 13041  on 9998  degrees of freedom\nAIC: 13045\n\nNumber of Fisher Scoring iterations: 4\n```\n:::\n\n```{.r .cell-code}\nlm(y ~ x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = y ~ x)\n\nCoefficients:\n(Intercept)            x  \n    0.52330      0.04825  \n```\n:::\n:::\n\n::: {.cell hash='binary_cache/html/unnamed-chunk-3_a0ce02492feed55454a875d137f5bd8c'}\n\n```{.r .cell-code}\ntibble(x = seq(-2.5, 7, length = 1000)) %>% \n  mutate(prob = devd(x)) %>% \n  ggplot(aes(x, prob)) + \n  geom_line() +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](binary_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nIf $\\varepsilon_1 \\sim \\text{EV1}$ and $\\varepsilon_2 \\sim \\text{EV2}$, then $\\varepsilon_1 - \\varepsilon_2$ is logistically distributed. \n\n\\begin{align*}\nf_{\\varepsilon}(t) = f_{\\varepsilon_1 - \\varepsilon_2}(t)\\\\\n& = \n\\end{align*}\n\n\n::: {.cell hash='binary_cache/html/unnamed-chunk-4_0286b617a5f354c7d04a03084df723dc'}\n\n```{.r .cell-code}\nn <- 1e6\ntibble(x = revd(n) - revd(n)) %>% \n  ggplot(aes(x)) + \n  geom_histogram(aes(y = ..density..), colour = \"black\", fill = \"white\", bins = 75) +\n  geom_function(fun = dlogis, color = \"red\") +\n  xlim(-7,7) +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 1866 rows containing non-finite values (stat_bin).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (geom_bar).\n```\n:::\n\n::: {.cell-output-display}\n![](binary_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='binary_cache/html/unnamed-chunk-5_abe1fffa84df088b3ebf037bc11ba3a1'}\n\n```{.r .cell-code}\nNldata <- read.table(\"~/Documents/GitHub/advanced_econometrics_examples/data/Nldata.asc\", quote=\"\\\"\", comment.char=\"\")\ndf <- Nldata %>% \n  mutate(i = ceiling(row_number()/4)) %>% \n  group_by(i) %>% \n  mutate(row = row_number()) %>% \n  pivot_wider(names_from = row, values_from = c(1, 2, 3, 4))  %>%\n  select(\n    i,\n    mode = 2,\n    price = 6,\n    crate = 10,\n    beach = 14,\n    pier = 3,\n    private = 7,\n    charter = 11,\n    price_beach = 15,\n    price_pier = 4,\n    price_private = 8,\n    price_charter = 12,\n    qbeach = 16,\n    qpier = 5,\n    qprivate = 9,\n    qcharter =13,\n    income = 17\n  ) %>% \n  ungroup()\n\n\n\nbinary_df <- df %>% \n  filter(charter + pier == 1) %>% \n  mutate(\n    log_repl = log(price_charter / price_pier),\n    N = n()\n  ) %>% \n  select(\n    y = charter,\n    log_repl,\n    N,\n    price_charter,\n    price_pier\n  )\n```\n:::\n\n::: {.cell hash='binary_cache/html/unnamed-chunk-6_423598237fe88f60927b65797b77061f'}\n\n```{.r .cell-code}\nbinary_df %>% \n  mutate(group = ifelse(y == 1, \"Charter\", \"Pier\")) %>% \n  bind_rows(\n    mutate(binary_df, group = \"Full Sample\")\n  ) %>% \n  group_by(group) %>%\n  summarize(\n    `Price Charter ($)` = round(mean(price_charter)),\n    `Price Pier ($)` = round(mean(price_pier)),\n    `ln relp` = round(mean(log_repl),3),\n    `Sample Probability` = n()/first(N),\n    Observations = n()\n  ) %>% \n  pivot_longer(!group) %>% \n  pivot_wider(names_from = group, values_from = value) %>% \n  select(\n    Variable = name,\n    `Charter`,\n    `Pier`,\n    `Full Sample`\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 4\n  Variable           Charter    Pier `Full Sample`\n  <chr>                <dbl>   <dbl>         <dbl>\n1 Price Charter ($)   75     110            85    \n2 Price Pier ($)     121      31            95    \n3 ln relp             -0.264   1.64          0.275\n4 Sample Probability   0.717   0.283         1    \n5 Observations       452     178           630    \n```\n:::\n:::\n\n::: {.cell hash='binary_cache/html/unnamed-chunk-7_59cf0c40105cceba3091036b7d35e51f'}\n\n```{.r .cell-code}\nlm(y ~ log_repl, binary_df) %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = y ~ log_repl, data = binary_df)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.97639 -0.16038  0.04135  0.19685  0.78869 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  0.78415    0.01347   58.21   <2e-16 ***\nlog_repl    -0.24291    0.01043  -23.28   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.3304 on 628 degrees of freedom\nMultiple R-squared:  0.4633,\tAdjusted R-squared:  0.4624 \nF-statistic: 542.1 on 1 and 628 DF,  p-value: < 2.2e-16\n```\n:::\n\n```{.r .cell-code}\nglm(y ~ log_repl, binary_df, family = \"binomial\")  %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = y ~ log_repl, family = \"binomial\", data = binary_df)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-2.6553  -0.2726   0.2480   0.4594   2.1659  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   2.0531     0.1689   12.15   <2e-16 ***\nlog_repl     -1.8225     0.1446  -12.61   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 750.12  on 629  degrees of freedom\nResidual deviance: 413.65  on 628  degrees of freedom\nAIC: 417.65\n\nNumber of Fisher Scoring iterations: 6\n```\n:::\n\n```{.r .cell-code}\nglm(y ~ log_repl, binary_df, family = binomial(link = \"probit\"))  %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = y ~ log_repl, family = binomial(link = \"probit\"), \n    data = binary_df)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-2.7763  -0.2439   0.2112   0.4610   2.1568  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  1.19436    0.08814   13.55   <2e-16 ***\nlog_repl    -1.05551    0.07542  -13.99   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 750.12  on 629  degrees of freedom\nResidual deviance: 408.82  on 628  degrees of freedom\nAIC: 412.82\n\nNumber of Fisher Scoring iterations: 6\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}