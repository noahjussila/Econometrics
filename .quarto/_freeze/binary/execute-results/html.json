{
  "hash": "da8313b31e0f45b9bb94d7d3bcd78a38",
  "result": {
    "markdown": "# Binary Choice \n\n\n\n\n::: {.cell hash='binary_cache/html/unnamed-chunk-1_1f6d94421954d3962ba375b281b25073'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\ntibble(\n  x = seq(-2, 2, length = 1000),\n  logit = plogis(x),\n  probit = pnorm(x),\n  `Xβ` = x\n) %>% \n  gather(\"F\", \"val\", -x) %>% \n  ggplot(aes(x, val, color = F)) +\n  geom_line() +\n  theme_minimal() +\n  labs(x = \"Xβ\", y = \"p = Prob(y = 1 | x)\") +\n  theme(legend.position = \"bottom\") +\n  ylim(-0.25,1.25)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 626 row(s) containing missing values (geom_path).\n```\n:::\n\n::: {.cell-output-display}\n![](binary_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\ntibble(\n  x = seq(-5, 5, length = 1000),\n  logit = dlogis(x),\n  normal = dnorm(x)\n) %>% \n  gather(\"density\", \"val\", -x) %>% \n  ggplot(aes(x, val, color = density)) +\n  geom_line() \n```\n\n::: {.cell-output-display}\n![](binary_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n:::\n\n::: {.cell hash='binary_cache/html/unnamed-chunk-2_05a7619cf0fa9b5e10e36c600524e7e8'}\n\n```{.r .cell-code}\nn <- 10000\nx <- runif(n, -5, 5)\np <- plogis(0.1 + 0.2*x)\nX <- cbind(1, x)\ny <- sapply(p, rbinom, size = 1, n = 1)\n\nbinary_choice_MLE <- function(y, X, Fun){\n  K <- ncol(X)\n  \n  # define negative log-likelihood\n  neg_LL <- function(beta) {\n    -sum(y*log(Fun(X %*% beta)) + (1-y)*log(1 - Fun(X %*% beta)))\n  }\n  \n  # minimize neg_LL\n  mle <- optim(\n    par = rep(0,K), \n    fn = neg_LL,\n    hessian = TRUE, \n    control = list(reltol = 1e-8)\n  )\n  \n  # access mle parameter and SEs from optimization\n  beta_hat <- mle$par\n  var_hat <- solve(mle$hessian)\n  se_hat <- sqrt(diag(var_hat))\n  \n  #calculate z score, CI, and p-val\n  z <- beta_hat/se_hat\n  lower_CI <- beta_hat - pnorm(0.975)*se_hat\n  upper_CI <- beta_hat + pnorm(0.975)*se_hat\n  p_val <- 2*(1 - pnorm(z))\n  \n  #combine everything into one table to return\n  output <- cbind(beta_hat, se_hat, z, lower_CI, upper_CI, p_val)\n  rownames(output) <- paste(\"β\", 1:K, sep = \"\")\n  colnames(output) <- c(\"Estimate\", \"Std.Error\", \"z-Stat\", \"Lower 95% CI\", \"Upper 95% CI\", \"p-Value\")\n  return(output)\n}\n\n\nbinary_choice_MLE(y, X, plogis) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Estimate   Std.Error    z-Stat Lower 95% CI Upper 95% CI      p-Value\nβ1 0.0960422 0.020799919  4.617432    0.0786697    0.1134147 3.885187e-06\nβ2 0.1955894 0.007411982 26.388276    0.1893988    0.2017801 0.000000e+00\n```\n:::\n\n```{.r .cell-code}\nglm(y ~ x, family = \"binomial\") %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = y ~ x, family = \"binomial\")\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.6540  -1.1060   0.7865   1.0626   1.5675  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) 0.095896   0.020800    4.61 4.02e-06 ***\nx           0.195641   0.007412   26.39  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 13844  on 9999  degrees of freedom\nResidual deviance: 13098  on 9998  degrees of freedom\nAIC: 13102\n\nNumber of Fisher Scoring iterations: 4\n```\n:::\n\n```{.r .cell-code}\nlm(y ~ x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = y ~ x)\n\nCoefficients:\n(Intercept)            x  \n    0.52225      0.04663  \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}