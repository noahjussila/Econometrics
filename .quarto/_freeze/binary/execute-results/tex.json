{
  "hash": "da8313b31e0f45b9bb94d7d3bcd78a38",
  "result": {
    "markdown": "# Binary Choice \n\n\n\n\n\n::: {.cell hash='binary_cache/pdf/unnamed-chunk-1_33923828c01a5f09f4b927cc3ce3c2f4'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n-- Attaching packages --------------------------------------- tidyverse 1.3.2 --\nv ggplot2 3.3.6      v purrr   0.3.5 \nv tibble  3.1.8      v dplyr   1.0.10\nv tidyr   1.2.1      v stringr 1.4.1 \nv readr   2.1.3      v forcats 0.5.2 \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\ntibble(\n  x = seq(-2, 2, length = 1000),\n  logit = plogis(x),\n  probit = pnorm(x),\n  `Xβ` = x\n) %>% \n  gather(\"F\", \"val\", -x) %>% \n  ggplot(aes(x, val, color = F)) +\n  geom_line() +\n  theme_minimal() +\n  labs(x = \"Xβ\", y = \"p = Prob(y = 1 | x)\") +\n  theme(legend.position = \"bottom\") +\n  ylim(-0.25,1.25)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 626 row(s) containing missing values (geom_path).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <ce>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nconversion failure on 'Xβ' in 'mbcsToSbcs': dot substituted for <b2>\n```\n:::\n\n::: {.cell-output-display}\n![](binary_files/figure-pdf/unnamed-chunk-1-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\ntibble(\n  x = seq(-5, 5, length = 1000),\n  logit = dlogis(x),\n  normal = dnorm(x)\n) %>% \n  gather(\"density\", \"val\", -x) %>% \n  ggplot(aes(x, val, color = density)) +\n  geom_line() \n```\n\n::: {.cell-output-display}\n![](binary_files/figure-pdf/unnamed-chunk-1-2.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell hash='binary_cache/pdf/unnamed-chunk-2_b14b2dd007e3b012e1c3d54d3d373626'}\n\n```{.r .cell-code}\nn <- 10000\nx <- runif(n, -5, 5)\np <- plogis(0.1 + 0.2*x)\nX <- cbind(1, x)\ny <- sapply(p, rbinom, size = 1, n = 1)\n\nbinary_choice_MLE <- function(y, X, Fun){\n  K <- ncol(X)\n  \n  # define negative log-likelihood\n  neg_LL <- function(beta) {\n    -sum(y*log(Fun(X %*% beta)) + (1-y)*log(1 - Fun(X %*% beta)))\n  }\n  \n  # minimize neg_LL\n  mle <- optim(\n    par = rep(0,K), \n    fn = neg_LL,\n    hessian = TRUE, \n    control = list(reltol = 1e-8)\n  )\n  \n  # access mle parameter and SEs from optimization\n  beta_hat <- mle$par\n  var_hat <- solve(mle$hessian)\n  se_hat <- sqrt(diag(var_hat))\n  \n  #calculate z score, CI, and p-val\n  z <- beta_hat/se_hat\n  lower_CI <- beta_hat - pnorm(0.975)*se_hat\n  upper_CI <- beta_hat + pnorm(0.975)*se_hat\n  p_val <- 2*(1 - pnorm(z))\n  \n  #combine everything into one table to return\n  output <- cbind(beta_hat, se_hat, z, lower_CI, upper_CI, p_val)\n  rownames(output) <- paste(\"β\", 1:K, sep = \"\")\n  colnames(output) <- c(\"Estimate\", \"Std.Error\", \"z-Stat\", \"Lower 95% CI\", \"Upper 95% CI\", \"p-Value\")\n  return(output)\n}\n\n\nbinary_choice_MLE(y, X, plogis) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Estimate  Std.Error    z-Stat Lower 95% CI Upper 95% CI     p-Value\nβ1 0.1195338 0.02088587  5.723192    0.1020895    0.1369781 1.04541e-08\nβ2 0.2043185 0.00743451 27.482445    0.1981091    0.2105280 0.00000e+00\n```\n:::\n\n```{.r .cell-code}\nglm(y ~ x, family = \"binomial\") %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = y ~ x, family = \"binomial\")\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.6842  -1.1007   0.7701   1.0485   1.5764  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) 0.119441   0.020886   5.719 1.07e-08 ***\nx           0.204341   0.007435  27.485  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 13830  on 9999  degrees of freedom\nResidual deviance: 13016  on 9998  degrees of freedom\nAIC: 13020\n\nNumber of Fisher Scoring iterations: 4\n```\n:::\n\n```{.r .cell-code}\nlm(y ~ x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = y ~ x)\n\nCoefficients:\n(Intercept)            x  \n    0.52748      0.04845  \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}